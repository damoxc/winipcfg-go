package winipcfg

type Interface struct {
	Name string
	Luid LUID
	Index uint32
	// Plus private members if required
}

func InterfaceFromLUID(luid LUID) (*Interface, error)
func InterfaceFromIndex(index uint32) (*Interface, error)
func InterfaceFromName(name string) (*Interface, error)

// Flush removes all, Add adds, Set flushes then adds.
func (iface *Interface) FlushAddresses() error
func (iface *Interface) AddAddresses(addresses []net.IP) error
func (iface *Interface) SetAddresses(addresses []net.IP) error

// splitDefault converts 0.0.0.0/0 into 0.0.0.0/1 and 128.0.0.0/1,
// and ::/0 into ::/1 and 8000::/1.
func (iface *Interface) FlushRoutes() error
func (iface *Interface) AddRoutes(routes []net.IPNet, splitDefault bool) error
func (iface *Interface) SetRoutes(routes []net.IPNet, splitDefault bool) error

func (iface *Interface) FlushDNS() error
func (iface *Interface) AddDNS(dnses []net.IP) error
func (iface *Interface) SetDNS(dnses []net.IP) error

// These make sure we don't leak through another interface's resolver.
func (iface *Interface) ForceDNSPriority() (windows.HANDLE, error)
func UnforceDNSPriority(handle windows.HANDLE) error

func (iface *Interface) func SetMTU(mtu uint16) error

// If metric is zero, then UseAutomaticMetric=true; otherwise
// UseAutomaticMetric=false and the metric is set for the interface.
func (iface *Interface) func SetMetric(metric uint32) error

// Calls callback with a default interface if the route to 0.0.0.0/0 changes,
// or if the default interface's MTU changes.
func RegisterDefaultInterfaceNotifier(callback func(*Interface)) (windows.HANDLE, error)
func UnregisterDefaultInterfaceNotifier(handle windows.HANDLE) error

// Returns the interface that has 0.0.0.0/0.
func DefaultInterface() (*Interface, error)
